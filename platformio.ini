; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
description = The Sensor Network
; Set SERIAL_DEBUG=-1 to disable SERIAL output
build_flags = 
	; Unix only, get output from internal command
	!echo "-D GIT_HEAD_VERSION=\"\\\""$(git rev-parse HEAD)"\\\"\"" 
	-D SERIAL_DEBUG=1 
	-D BUILD_ENV_NAME="\"$PIOENV\""
	
;Doesn't work in this form:
;-D FIRMWARE_RELEASE=\"$($(shell git --no-pager describe --tags --always --dirty))\"
;                ('FIRMWARE_RELEASE', '\\"$($(shell'),
;build_flags = -D SERIAL_DEBUG=-1 -D FIRMWARE_RELEASE="\"$($(shell git --no-pager describe --tags --always --dirty))\""
default_envs = 
	; esp12e
	; NodeMCU0_9
	; NodeMCU1_0
	ESP32dev
	; AdafruitFeatherESP32
	; OTA_esp12e
	; OTA_NodeMCU0_9
	; OTA_NodeMCU1_0
	OTA_ESP32dev
	; OTA_AdafruitFeatherESP32

[env:esp12e]
platform = espressif8266
board = esp12e
framework = arduino
monitor_speed = 115200
upload_port = /dev/ttyUSB2
lib_deps = adafruit/Adafruit Unified Sensor@^1.1.4
build_flags = ${platformio.build_flags}
; (buildprog, size, upload, program, buildfs, uploadfs, uploadfsota)
; extra_scripts = post:extra_script.py

[env:NodeMCU0_9]
platform = espressif8266
board = nodemcu
framework = arduino
monitor_speed = 115200
upload_port = /dev/ttyUSB1
lib_deps = adafruit/Adafruit Unified Sensor@^1.1.4
build_flags = ${platformio.build_flags}
; extra_scripts = post:extra_script.py

[env:NodeMCU1_0]
platform = espressif8266
board = nodemcuv2
framework = arduino
monitor_speed = 115200
upload_port = /dev/ttyUSB2
lib_deps = adafruit/Adafruit Unified Sensor@^1.1.4
build_flags = ${platformio.build_flags}

[env:ESP32dev]
platform = espressif32
board = esp32dev
framework = arduino
monitor_speed = 115200
upload_port = /dev/ttyUSB0
lib_deps = adafruit/Adafruit Unified Sensor@^1.1.4
build_flags = ${platformio.build_flags}
; extra_scripts = post:extra_script.py

[env:AdafruitFeatherESP32]
platform = espressif32
board = featheresp32
framework = arduino
monitor_speed = 115200
upload_port = /dev/ttyUSB4
lib_deps = adafruit/Adafruit Unified Sensor@^1.1.4
build_flags = ${platformio.build_flags}

[env:OTA_esp12e]
platform = espressif8266
board = esp12e
framework = arduino
build_flags = ${platformio.build_flags}
lib_deps = adafruit/Adafruit Unified Sensor@^1.1.4
; monitor_speed = 115200
; upload_port = /dev/ttyUSB2
; place it into the root of project or use full path
extra_scripts = extra_script.py
upload_protocol = custom
; each flag in a new line
upload_flags =
  "\"$PIOENV\""

[env:OTA_NodeMCU0_9]
platform = espressif8266
board = nodemcu
framework = arduino
monitor_speed = 115200
upload_port = /dev/ttyUSB1
lib_deps = adafruit/Adafruit Unified Sensor@^1.1.4
build_flags = ${platformio.build_flags}
extra_scripts = extra_script.py
upload_protocol = custom
; each flag in a new line
upload_flags =
  "\"$PIOENV\""

[env:OTA_NodeMCU1_0]
platform = espressif8266
board = nodemcuv2
framework = arduino
monitor_speed = 115200
upload_port = /dev/ttyUSB2
lib_deps = adafruit/Adafruit Unified Sensor@^1.1.4
build_flags = ${platformio.build_flags}
extra_scripts = extra_script.py
upload_protocol = custom
; each flag in a new line
upload_flags =
  "\"$PIOENV\""

; Environment must begin with OTA_ for OTA scheme  
[env:OTA_ESP32dev]
platform = espressif32
board = esp32dev
framework = arduino
monitor_speed = 115200
upload_port = /dev/ttyUSB0
lib_deps = adafruit/Adafruit Unified Sensor@^1.1.4
build_flags = ${platformio.build_flags}
extra_scripts = extra_script.py
upload_protocol = custom
; each flag in a new line
upload_flags =
  "\"$PIOENV\""

[env:OTA_AdafruitFeatherESP32]
platform = espressif32
board = featheresp32
framework = arduino
monitor_speed = 115200
upload_port = /dev/ttyUSB4
lib_deps = adafruit/Adafruit Unified Sensor@^1.1.4
build_flags = ${platformio.build_flags}
extra_scripts = extra_script.py
upload_protocol = custom
; each flag in a new line
upload_flags =
  "\"$PIOENV\""

